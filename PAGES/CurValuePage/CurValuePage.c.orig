/*********************************************************************
*                                                                    *
*                SEGGER Microcontroller GmbH & Co. KG                *
*        Solutions for real time microcontroller applications        *
*                                                                    *
**********************************************************************
*                                                                    *
* C-file generated by:                                               *
*                                                                    *
*        GUI_Builder for emWin version 5.30                          *
*        Compiled Jul  1 2015, 10:50:32                              *
*        (c) 2015 Segger Microcontroller GmbH & Co. KG               *
*                                                                    *
**********************************************************************
*                                                                    *
*        Internet: www.segger.com  Support: support@segger.com       *
*                                                                    *
**********************************************************************
*/

// USER START (Optionally insert additional includes)
// USER END

#include "DIALOG.h"
#include "CurValuePage.h"

/*********************************************************************
*
*       Defines
*
**********************************************************************
*/
#define ID_FRAMEWIN_0 (GUI_ID_USER + 0x00)
#define ID_TEXT_0 (GUI_ID_USER + 0x01)
#define ID_IMAGE_0 (GUI_ID_USER + 0x02)
#define ID_TEXT_1 (GUI_ID_USER + 0x08)
#define ID_TEXT_2 (GUI_ID_USER + 0x09)
#define ID_TEXT_3 (GUI_ID_USER + 0x0A)
#define ID_TEXT_4 (GUI_ID_USER + 0x0B)
#define ID_TEXT_5 (GUI_ID_USER + 0x0C)
#define ID_TEXT_6 (GUI_ID_USER + 0x0D)
#define ID_TEXT_7 (GUI_ID_USER + 0x0E)
#define ID_TEXT_8 (GUI_ID_USER + 0x0F)
#define ID_TEXT_9 (GUI_ID_USER + 0x10)
#define ID_TEXT_10 (GUI_ID_USER + 0x11)
#define ID_EDIT_0 (GUI_ID_USER + 0x12)
#define ID_EDIT_1 (GUI_ID_USER + 0x13)
#define ID_EDIT_2 (GUI_ID_USER + 0x14)
#define ID_EDIT_3 (GUI_ID_USER + 0x15)
#define ID_EDIT_4 (GUI_ID_USER + 0x16)
#define ID_EDIT_5 (GUI_ID_USER + 0x17)
#define ID_EDIT_6 (GUI_ID_USER + 0x18)
#define ID_EDIT_7 (GUI_ID_USER + 0x19)
#define ID_EDIT_8 (GUI_ID_USER + 0x1A)
#define ID_EDIT_9 (GUI_ID_USER + 0x1B)
#define ID_TEXT_11 (GUI_ID_USER + 0x1C)
#define ID_TEXT_12 (GUI_ID_USER + 0x1D)
#define ID_TEXT_13 (GUI_ID_USER + 0x1E)
#define ID_TEXT_14 (GUI_ID_USER + 0x1F)
#define ID_TEXT_15 (GUI_ID_USER + 0x20)
#define ID_TEXT_16 (GUI_ID_USER + 0x21)
#define ID_TEXT_17 (GUI_ID_USER + 0x22)
#define ID_TEXT_18 (GUI_ID_USER + 0x23)
#define ID_TEXT_19 (GUI_ID_USER + 0x24)
#define ID_TEXT_20 (GUI_ID_USER + 0x25)
#define ID_EDIT_10 (GUI_ID_USER + 0x26)
#define ID_EDIT_11 (GUI_ID_USER + 0x27)
#define ID_EDIT_12 (GUI_ID_USER + 0x28)
#define ID_EDIT_13 (GUI_ID_USER + 0x29)
#define ID_EDIT_14 (GUI_ID_USER + 0x2A)
#define ID_EDIT_15 (GUI_ID_USER + 0x2B)
#define ID_EDIT_16 (GUI_ID_USER + 0x2C)
#define ID_EDIT_17 (GUI_ID_USER + 0x2D)
#define ID_EDIT_18 (GUI_ID_USER + 0x2E)
#define ID_EDIT_19 (GUI_ID_USER + 0x2F)
#define ID_TEXT_21 (GUI_ID_USER + 0x30)
#define ID_TEXT_22 (GUI_ID_USER + 0x31)
#define ID_TEXT_23 (GUI_ID_USER + 0x32)
#define ID_TEXT_24 (GUI_ID_USER + 0x33)
#define ID_TEXT_25 (GUI_ID_USER + 0x34)
#define ID_TEXT_26 (GUI_ID_USER + 0x35)
#define ID_TEXT_27 (GUI_ID_USER + 0x36)
#define ID_TEXT_28 (GUI_ID_USER + 0x37)
#define ID_TEXT_29 (GUI_ID_USER + 0x38)
#define ID_TEXT_30 (GUI_ID_USER + 0x39)
#define ID_EDIT_20 (GUI_ID_USER + 0x3A)
#define ID_EDIT_21 (GUI_ID_USER + 0x3B)
#define ID_EDIT_22 (GUI_ID_USER + 0x3C)
#define ID_EDIT_23 (GUI_ID_USER + 0x3D)
#define ID_EDIT_24 (GUI_ID_USER + 0x3E)
#define ID_EDIT_25 (GUI_ID_USER + 0x3F)
#define ID_EDIT_26 (GUI_ID_USER + 0x40)
#define ID_EDIT_27 (GUI_ID_USER + 0x41)
#define ID_EDIT_28 (GUI_ID_USER + 0x42)
#define ID_EDIT_29 (GUI_ID_USER + 0x43)
#define ID_TEXT_31 (GUI_ID_USER + 0x44)
#define ID_TEXT_32 (GUI_ID_USER + 0x45)
#define ID_TEXT_33 (GUI_ID_USER + 0x46)
#define ID_TEXT_34 (GUI_ID_USER + 0x47)
#define ID_TEXT_35 (GUI_ID_USER + 0x48)
#define ID_TEXT_36 (GUI_ID_USER + 0x49)
#define ID_TEXT_37 (GUI_ID_USER + 0x4A)
#define ID_TEXT_38 (GUI_ID_USER + 0x4B)
#define ID_TEXT_39 (GUI_ID_USER + 0x4C)
#define ID_TEXT_40 (GUI_ID_USER + 0x4D)
#define ID_EDIT_30 (GUI_ID_USER + 0x4E)
#define ID_EDIT_31 (GUI_ID_USER + 0x4F)
#define ID_EDIT_32 (GUI_ID_USER + 0x50)
#define ID_EDIT_33 (GUI_ID_USER + 0x51)
#define ID_EDIT_34 (GUI_ID_USER + 0x52)
#define ID_EDIT_35 (GUI_ID_USER + 0x53)
#define ID_EDIT_36 (GUI_ID_USER + 0x54)
#define ID_EDIT_37 (GUI_ID_USER + 0x55)
#define ID_EDIT_38 (GUI_ID_USER + 0x56)
#define ID_EDIT_39 (GUI_ID_USER + 0x57)
#define ID_EDIT_40 (GUI_ID_USER + 0x58)
#define ID_BUTTON_0 (GUI_ID_USER + 0x59)
#define ID_BUTTON_1 (GUI_ID_USER + 0x5A)
#define ID_TEXT_41 (GUI_ID_USER + 0x5C)
#define ID_TEXT_42 (GUI_ID_USER + 0x5D)
#define ID_TEXT_43 (GUI_ID_USER + 0x5E)


// USER START (Optionally insert additional defines)
// USER END

/*********************************************************************
*
*       Static data
*
**********************************************************************
*/

// USER START (Optionally insert additional static data)
// USER END

/*********************************************************************
*
*       _aDialogCreate
*/
static const GUI_WIDGET_CREATE_INFO _aDialogCreate[] = {
  { FRAMEWIN_CreateIndirect, "Framewin", ID_FRAMEWIN_0, 3, -1, 1024, 600, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Title", ID_TEXT_0, 64, 0, 950, 64, 0, 0x0, 0 },
  { IMAGE_CreateIndirect, "Image", ID_IMAGE_0, 0, 0, 64, 64, 0, 0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_1, 0, 70, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_2, 0, 115, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_3, 0, 160, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_4, 0, 205, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_5, 0, 295, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_6, 2, 249, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_7, 0, 340, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_8, 0, 385, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_9, 0, 430, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_10, 0, 475, 100, 25, 0, 0x0, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_0, 100, 70, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_1, 100, 115, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_2, 100, 160, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_3, 100, 205, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_4, 100, 250, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_5, 100, 295, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_6, 100, 340, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_7, 100, 385, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_8, 100, 430, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_9, 100, 475, 100, 25, 0, 0x32, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_11, 274, 70, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_12, 274, 115, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_13, 274, 160, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_14, 274, 205, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_15, 274, 250, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_16, 274, 295, 100, 20, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_17, 274, 340, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_18, 274, 385, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_19, 274, 430, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_20, 274, 475, 100, 25, 0, 0x64, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_10, 374, 70, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_11, 374, 115, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_12, 374, 160, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_13, 374, 205, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_14, 374, 250, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_15, 374, 295, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_16, 374, 340, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_17, 374, 385, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_18, 374, 430, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_19, 374, 475, 100, 25, 0, 0x32, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_21, 548, 70, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_22, 548, 115, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_23, 548, 160, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_24, 548, 205, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_25, 548, 250, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_26, 548, 295, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_27, 548, 340, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_28, 548, 385, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_29, 548, 430, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_30, 548, 475, 100, 25, 0, 0x0, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_20, 648, 70, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_21, 648, 115, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_22, 648, 160, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_23, 648, 205, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_24, 648, 250, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_25, 648, 295, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_26, 648, 340, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_27, 648, 385, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_28, 648, 430, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_29, 648, 475, 100, 25, 0, 0x32, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_31, 810, 70, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_32, 810, 115, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_33, 810, 160, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_34, 810, 205, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_35, 810, 250, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_36, 810, 295, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_37, 810, 340, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_38, 810, 385, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_39, 810, 430, 100, 25, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_40, 810, 475, 100, 25, 0, 0x0, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_30, 910, 70, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_31, 910, 115, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_32, 160, 910, 100, 25, 0, 0x64, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_33, 910, 160, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_34, 910, 205, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_35, 910, 250, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_36, 910, 295, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_37, 910, 340, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_38, 910, 385, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_39, 910, 430, 100, 25, 0, 0x32, 0 },
  { EDIT_CreateIndirect, "Edit", ID_EDIT_40, 910, 475, 100, 25, 0, 0x32, 0 },
  { BUTTON_CreateIndirect, "Button", ID_BUTTON_0, 350, 540, 80, 30, 0, 0x0, 0 },
  { BUTTON_CreateIndirect, "Button", ID_BUTTON_1, 586, 540, 80, 30, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_41, 463, 540, 30, 30, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_42, 528, 540, 30, 30, 0, 0x0, 0 },
  { TEXT_CreateIndirect, "Text", ID_TEXT_43, 495, 540, 30, 30, 0, 0x64, 0 },
  // USER START (Optionally insert additional widgets)
  // USER END
};

/*********************************************************************
*
*       Static code
*
**********************************************************************
*/

// USER START (Optionally insert additional static code)
// USER END

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
  WM_HWIN hItem;
  int     NCode;
  int     Id;
  
  switch (pMsg->MsgId) {
  case WM_INIT_DIALOG:
    hItem = pMsg->hWin;
    FRAMEWIN_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
	//传感器类型1
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
	//传感器类型2
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
	//传感器类型3
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型4
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_3);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型5
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型6
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型7
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型8
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_7);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型9
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_8);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型10
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_9);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型11
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_10);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值1
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_0);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值2
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_1);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值3
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_2);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值4
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_3);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值5
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_4);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值6
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_5);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值7
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_6);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值8
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_7);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值9
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_8);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器监测值10
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_9);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型12
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型13
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型14
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型15
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型16
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_15);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型17
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_16);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型18
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_17);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型19
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_18);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型20
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_19);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //传感器类型21
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_20);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_10);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_11);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_12);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_13);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_14);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_15);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_16);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_17);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_18);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_19);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_21);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_22);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_23);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_24);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_25);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_26);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_27);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_28);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_29);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_30);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_20);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_21);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_22);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_23);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_24);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_25);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_26);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_27);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_28);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_29);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_31);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_32);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_33);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_34);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_35);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_36);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_37);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_38);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_39);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_40);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_30);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_31);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_32);
    EDIT_SetText(hItem, "123");
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_33);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_34);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_35);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_36);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_37);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_38);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_39);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Edit'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_EDIT_40);
    EDIT_SetText(hItem, "");
    EDIT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_41);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_42);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_43);
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    TEXT_SetText(hItem, "/");
    TEXT_SetFont(hItem, GUI_FONT_16_1);
    // USER START (Optionally insert additional code for further widget initialization)
    // USER END
    break;
  case WM_NOTIFY_PARENT:
    Id    = WM_GetId(pMsg->hWinSrc);
    NCode = pMsg->Data.v;
    switch(Id) {
    case ID_BUTTON_0: // Notifications sent by 'Button'
      switch(NCode) {
      case WM_NOTIFICATION_CLICKED:
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      case WM_NOTIFICATION_RELEASED:
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    case ID_BUTTON_1: // Notifications sent by 'Button'
      switch(NCode) {
      case WM_NOTIFICATION_CLICKED:
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      case WM_NOTIFICATION_RELEASED:
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    // USER START (Optionally insert additional code for further Ids)
    // USER END
    }
    break;
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
    break;
  }
}

/*********************************************************************
*
*       Public code
*
**********************************************************************
*/
/*********************************************************************
*
*       CreateFramewin
*/
WM_HWIN CreateCurValuePage(void) {
  WM_HWIN hWin;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
  return hWin;
}

// USER START (Optionally insert additional public code)
// USER END

/*************************** End of file ****************************/
